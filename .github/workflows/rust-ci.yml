name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable, beta]
        include:
          - rust: nightly
            os: ubuntu-latest
            allow-failure: true
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true
        components: rustfmt, clippy
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build
      run: cargo build --verbose
      continue-on-error: ${{ matrix.allow-failure || false }}
    
    - name: Run tests
      run: cargo test --verbose
      continue-on-error: ${{ matrix.allow-failure || false }}
    
    - name: Check formatting
      run: cargo fmt -- --check
      continue-on-error: ${{ matrix.allow-failure || false }}
    
    - name: Check code with Clippy
      run: cargo clippy -- -D warnings
      continue-on-error: ${{ matrix.allow-failure || false }}
  
  coverage:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    
    - name: Install cargo-tarpaulin (Ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      uses: actions-rs/tarpaulin@v0.1
      with:
        version: '0.15.0'
        args: '--ignore-tests'
    
    - name: Install cargo-llvm-cov (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        rustup component add llvm-tools-preview
        cargo install cargo-llvm-cov
    
    - name: Generate coverage report (macOS)
      if: matrix.os == 'macos-latest'
      run: cargo llvm-cov --lcov --output-path lcov.info
    
    - name: Upload to codecov.io (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v3
      
    - name: Upload to codecov.io (macOS)
      if: matrix.os == 'macos-latest'
      uses: codecov/codecov-action@v3
      with:
        files: ./lcov.info
        fail_ci_if_error: false

  security_audit:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    
    - name: Security audit
      uses: actions-rs/audit-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}